You can use model.save(filepath) to save a Keras model into a single HDF5 file which will contain:
	- the architecture of the model, allowing to re-create the model
	- the weights of the model
	- the training configuration (loss, optimizer)
	- the state of the optimizer, allowing to resume training exactly where you left off.
You can then use keras.models.load_model(filepath) to reinstantiate your model. load_model will also take care of compiling the model using the saved training configuration (unless the model was never compiled in the first place).




## Saving/loading only a model's weights
If you need to save the weights of a model, you can do so in HDF5 with the code below:
	model.save_weights('my_model_weights.h5')
Assuming you have code for instantiating your model, you can then load the weights you saved into a model with the same architecture:
	model.load_weights('my_model_weights.h5')
If you need to load the weights into a different architecture (with some layers in common), for instance for fine-tuning or transfer-learning, you can load them by layer name:
	model.load_weights('my_model_weights.h5', by_name=True)



